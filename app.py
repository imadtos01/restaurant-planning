import streamlit as st
import pandas as pd
import os
from planning_core import generate_planning

st.set_page_config(page_title="Planning Restaurant", layout="wide")
st.title("üìÖ G√©n√©rateur de planning pour restaurant")

# 1Ô∏è‚É£ - Upload du fichier Excel
uploaded_file = st.file_uploader("1Ô∏è‚É£ Charger le fichier de besoins (Excel)", type=["xlsx"])
if uploaded_file:
    besoins_df = pd.read_excel(uploaded_file, sheet_name=0, index_col=0)
    st.success("‚úÖ Fichier charg√© avec succ√®s.")
else:
    st.info("‚ÑπÔ∏è Aucun fichier import√©, mod√®le par d√©faut utilis√©.")
    besoins_df = pd.read_excel("besoins.xlsx", sheet_name=0, index_col=0)

# 2Ô∏è‚É£ - Modifier les besoins
st.markdown("## 2Ô∏è‚É£ Modifier les besoins horaires")
besoins_df_edit = st.data_editor(besoins_df, use_container_width=True, num_rows="dynamic")

# 3Ô∏è‚É£ - S√©lection du nombre d'employ√©s
st.markdown("## 3Ô∏è‚É£ Nombre d‚Äôemploy√©s disponibles")
num_workers = st.slider("S√©lectionner le nombre d'employ√©s", min_value=1, max_value=20, value=6)

# 4Ô∏è‚É£ - Bouton pour g√©n√©rer le planning
if st.button("4Ô∏è‚É£ G√©n√©rer le planning"):
    weekly_chef_need = {day: list(besoins_df_edit[day].fillna(0).astype(int)) for day in besoins_df_edit.columns}
    output_path = os.path.expanduser("~/planning_restaurant.xlsx")
    result = generate_planning(num_workers, weekly_chef_need, output_path)

    if result:
        st.success("‚úÖ Planning g√©n√©r√© avec succ√®s !")
        with open(output_path, "rb") as f:
            st.download_button("üì• T√©l√©charger le planning Excel", f, file_name="planning_restaurant.xlsx")
    else:
        st.error("‚ùå Une erreur est survenue pendant la g√©n√©ration du planning.")
